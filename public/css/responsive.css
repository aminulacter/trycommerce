/* Large Devices, Wide Screens */

@media only screen and (max-width: 1200px) {
  .container {
    max-width: 960px;
  }
}

/* Medium Devices, Desktops */

@media only screen and (max-width: 992px) {
  header.with-background .top-nav,
  header .top-nav {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  header.with-background .top-nav .logo,
  header .top-nav .logo {
    margin: auto;
  }

  header.with-background .top-nav ul,
  header .top-nav ul {
    margin: 20px auto 0;
    width: 80%;
  }

  header.with-background .hero,
  header .hero {
    grid-template-columns: 1fr;
    text-align: center;
  }

  header.with-background .hero .hero-image,
  header .hero .hero-image {
    padding-left: 0;
    margin-top: 40px;
  }

  .featured-section {
    padding: 50px 0;
  }

  .featured-section .products {
    grid-template-columns: 1fr;
  }

  .blog-section .blog-posts {
    grid-template-columns: 1fr;
    text-align: center;
    grid-template-areas: "blog3" "blog2" "blog1";
  }

  .blog-section .blog-posts .blog-post {
    margin-top: 30px;
  }

  .footer-content {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .footer-content .made-with {
    margin: auto;
  }

  .footer-content ul {
    margin: 20px auto;
    width: 60%;
  }

  .breadcrumbs {
    text-align: center;
  }

  .breadcrumbs .breadcrumbs-container {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .search-form {
    margin: 14px auto;
    width: 80%;
  }

  .products-section {
    grid-template-columns: 1fr;
  }

  .products-section .sidebar {
    text-align: center;
  }

  .products-section .products {
    grid-template-columns: 1fr;
  }

  .product-section {
    grid-template-columns: 1fr;
  }

  .might-like-section .might-like-grid {
    grid-template-columns: 1fr;
  }

  .cart-section {
    grid-template-columns: 1fr;
  }

  .cart-section .cart-buttons {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    text-align: center;
  }

  .cart-section .cart-table-row .cart-table-row-left {
    width: 30%;
  }

  .cart-section .cart-table-row .cart-table-row-right {
    width: 55%;
  }

  .cart-section .cart-table-row img {
    display: none;
  }

  .cart-section .cart-totals {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .cart-section .cart-totals .cart-totals-left {
    width: 100%;
    margin-bottom: 20px;
  }

  .cart-section .cart-totals .cart-totals-right {
    width: 100%;
  }

  .checkout-section {
    grid-template-columns: 1fr;
  }

  .checkout-section .checkout-table-container {
    margin-left: 10px;
  }

  .search-results-container-algolia {
    grid-template-columns: 1fr;
  }

  .ais-refinement-list--count {
    margin-left: auto;
    margin-right: 10px;
  }
}

/* Small Devices, Tablets */

/* Extra Small Devices, Phones */

/* Custom, iPhone Retina */


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/